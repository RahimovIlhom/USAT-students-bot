version: '3.9'

services:
  django:
    build:
      context: .
    container_name: django_app
    env_file: .env
    ports:
      - "8280:8000"
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    depends_on:
      - db
      - redis
    command: >
      sh -c "
            python manage.py compilemessages &&
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            python manage.py createsuperuser --noinput || echo 'Superuser yaratilmadi.' &&
            gunicorn core.wsgi:application --bind 0.0.0.0:8000"

  bot:
    build:
      context: .
    container_name: aiogram_bot
    env_file: .env
    depends_on:
      - redis
    ports:
      - "8380:8080"
    volumes:
      - ./certs:/etc/letsencrypt
      - ./media:/app/media
    command: python web_bot.py

  celery_worker:
    build:
      context: .
    container_name: celery_worker
    env_file: .env
    depends_on:
      - redis
      - db
    volumes:
      - ./media:/app/media
    command: celery -A core worker --loglevel=info

  celery_beat:
    build:
      context: .
    container_name: celery_beat
    env_file: .env
    depends_on:
      - redis
      - db
    volumes:
      - ./media:/app/media
    command: celery -A core beat -l info

  redis:
    image: redis:alpine
    container_name: redis_cache
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  db:
    image: postgres:14-alpine
    container_name: postgres_db
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  redis_data:
